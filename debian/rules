#! /usr/bin/make -f
# Based on the sample debian/rules that uses debhelper. 
# GNU copyright 1997 by Joey Hess.

#DEB_BUILD_OPTIONS?="debug nostrip"
export DEB_BUILD_OPTIONS

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=3

# Try to preserve timestamps as much as possible
export INSTALL=/usr/bin/install -p


# Features configuration
# ---------------------- 
#
# We're aiming for a package that's stable, with as much
# functionality as is reasonably possible.

features:=

# The Python support offers a nice way to extend gnumeric's functionality.

features+= --with-python=python2.2

# Bonobo allows us to use parts of other applications like Guppi and
# Evolution as components via CORBA, and allows us to work as a component
# for other applications.
#
# The bonobo support is currently disabled while the GNOME2 port is being
# worked on

features+= --without-bonobo

# File -> Send functionality via Evolution's mail composer component. Note
# that this is achieved through Bonobo, so no additional library
# dependencies are introduced.

features+= --with-evolution

# Plugin to access databases through the GDA framework.

features+= --with-gda

# Guile offers an additional way to extension gnumeric, but the guile
# support is for guile 1.5 or newer, which is not currently available in
# Debian.

features+= --without-guile

# configure.in: "Gnome Basic is extremely API unstable; it is likely that
# gnumeric will only build with the single version mentioned in
# configure.in, if at all. It is possible, but unlikely, that Gnome Basic
# contains security vulnerabilities."

features+= --without-gb

configure: configure-stamp
configure-stamp:
	dh_testdir

	# Prepare for build
	 
	# Update our local copy of the Evolution Composer component
	# interface, if available. 
	if test -r /usr/share/idl/Evolution-Composer.idl ; then \
		rm -rf evo && \
		mkdir evo && \
		cp /usr/share/idl/Evolution-Composer.idl evo ; \
	fi
	
	mkdir build
	cd build && env srcdir=`pwd`/.. \
		sh ../autogen.sh \
		$(features) \
		--prefix=/usr --sysconfdir=/etc \
		--localstatedir=/var/lib \
                --enable-compile-warnings=minimum \
                --enable-iso-c

	touch configure-stamp

build: configure-stamp build-stamp
build-stamp:
	dh_testdir

	cd build && $(MAKE) EVOLUTION_IDL_DIR=`pwd`/../evo

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp debian/*substvars debian/*~ 
	rm -rf debian/tmp build

	# Clean out files that autogen.sh may have changed
	rm -f config.guess config.sub ltmain.sh
	
	# Clean out files generated by autotools, intltool and the like
	-find -type f -name 'Makefile.am' | sed -e 's/\.am$$/.in/' | xargs rm -f
	-find -type f -name 'Makefile.am' | sed -e 's/\.am$$//' | xargs rm -f
	-rm -f po/*.gmo

	# Clean out files generated as part of the documentation generation
	-rm -f doc/C/index.html omf-install/gnumeric-C.omf
	-rm -rf doc/C/gnumeric doc/C/DBTOHTML_OUTPUT_DIR*

	-rm -rf aclocal.m4 config.h.in configure stamp-h.in \
		xml-i18n-extract* xml-i18n-merge* xml-i18n-update* \
		doc/C/gnumeric.junk
	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd build && $(MAKE) install \
		prefix=`pwd`/../debian/gnumeric/usr \
		sysconfdir=`pwd`/../debian/gnumeric/etc \
		localstatedir=`pwd`/../debian/gnumeric/var/lib

	# Plugins are not intended as stand-alone executables
	find `pwd`/debian/gnumeric/usr/lib/gnumeric/*/plugins -type f -print0 | xargs -0 chmod a-x

	# Remove unwanted files: static libraries, libtool files for plugins
	# and documentation sources
	find `pwd`/debian/gnumeric/usr/ -name '*.a' -print0 | xargs -0 rm -f
	find `pwd`/debian/gnumeric/usr/lib/gnumeric/*/plugins -name '*.la' -print0 | xargs -0 rm -f
	find `pwd`/debian/gnumeric/ -name '*.sgml' -print0 | xargs -0 rm -f

	# Remove scrollkeeper stuff as well, as it should be done at package
	# (de)install time.
	rm -rf `pwd`/debian/gnumeric/var/lib/scrollkeeper

	# Low-colour icon for use by the menu system
	$(INSTALL) -m 644 debian/gnome-gnumeric.xpm `pwd`/debian/gnumeric/usr/share/pixmaps/

	# Move files and put in links
	dh_movefiles --sourcedir=debian/gnumeric
	mv `pwd`/debian/gnumeric-doc/usr/share/gnome/help/gnumeric \
		`pwd`/debian/gnumeric-doc/usr/share/doc/gnumeric-doc/html
	cd `pwd`/debian/gnumeric-doc/usr/share/gnome/help && \
		ln -s ../../doc/gnumeric-doc/html/ gnumeric
	cd debian/gnumeric && \
		for idl in usr/share/gnumeric/*/idl/*.idl; do \
			(cd usr/share/idl && ln -s `echo $$idl | sed -e 's,^usr/share,..,'` .); \
		done

	# Clean out empty dirs left over from moving
	-find `pwd`/debian/gnumeric/ -type d -depth | xargs rmdir 2>&1 >/dev/null

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i
	dh_installdocs -i

	dh_installexamples -i
	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
	dh_installmime -i
#	dh_installinit -i
	dh_installcron -i
#	dh_installman -i
	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs ChangeLog -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
#	dh_installdebconf -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
	dh_installmime -a
#	dh_installinit -a
	dh_installcron -a
	dh_installman -a
	dh_installinfo -a
#	dh_undocumented -a
	dh_installchangelogs ChangeLog -a
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a

	dh_shlibdeps -a

	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
