
This is a roadmap of the files that compose the GNOME Graphics
component.

The Graph component is a Bonobo component that implements the
GNOME::Embeddable interface for being embedded.

The main entry point is the GNOME::Graph::Layout interface, this is an
interface that enables the user to control the various visual elements
of a graphic.

Separate interfaces are used for the different components of the user
interface.

* Graph.idl:	

	CORBA interfaces for the Graphic module.  Includes the
	Gnumeric.idl interfaces.

* layout.c, layout.h:

	Contains the implementation of the GNOME::Graph::Layout
	interface.  This object implements a GNOME::Embeddable and it
	is the repository for the various elements of a plot.

	The object is a derivative of a GnomeEmbeddable Bonobo object.

* layout-view.c, layout-view.h:

	These implement the Bonobo views for the Layout embeddable
	component.  They are GnomeCanvas derivatives and they take
	care of laying out the various visual elements that compose
	the plot.

* graph.c, graph.h:

	These implement a plain GnomeObject that controls the actual
	plotting engine.  The graphic is manipulated trough CORBA by
	changing the different attributes exposed by the interface. 

	Common operations for all the graphic types are done here,
	like computing the ranges of the information to be plotted. 

* graph-view.h, graph-view.c:

	These are the views of the Graph model.  The views are
	implemented as GnomeCanvasItems.  They are created by the
	LayoutView object.

	This file implements the "dispatching" of the actual rendering
	to rendering routines implemented in the various other
	modules.

* vector.c, vector.h

	Vectors represent a one-dimension array that can contain
	VecValues (strings or doubles).  Sometimes the plotting engine
	does not care about the string, so it requests that any string
	found is converted to a double value.

	Vectors are GnomeObjects and are intended to be instantiated
	for each series being plotted in the container applications.

	The Vector object implementation uses callbacks to simplify
	testing and prototyping.  The Gnumeric version might just hook
	up directly into Gnumeric.

	Vectors are transfered to the Layout using the the add_series
	method in the Layout.

* graph-vector.c, graph-vector.h:

	These files implement the access to the remote Vector object
	and are intended to provide a basic "cache" mechanism for the
	actual data.

