Here is a task list for making the solver really cool
=====================================================

Regarding LP & ILP:
===================

Critical bugs:
  * if the program is infeasible report it as such
  * if the program is unbounded report it as such
  * fix all memory leaks

Usability fixes:
  * add keep original values dialog
  * check that the program is properly defined (e.g. no #DIV0, #NUM!, ...)
  * get_lp_coeff: test that it's really LP

Feature enhancements:
  * fix assume non-negative being off
  * implement bool constraints
  * add algorithm options:
    - max iterations
    - max time
    - scaling
  * sensitivity report:
    - fix reduced cost
    - fix adjustable cells: allowable increase
    - fix adjustable cells: allowable decrease
    - fix constraints: allowable increase
    - fix constraints: allowable decrease
  * performance report:
    - add the name of the algorithm
    - add options used
    - fix user & system time reporting
  * dual program report:
    - implement generation of a report that gives the dual of the program
  * MPS plugin:
    - add program export
    - finish BOUNDS support
    - implement RANGES support
    - clean up
  * add more algorithms
    - add a list selection dialog for algorithms into the main dialog
    - try to integrate GLPK and SLATEC SPLP to see how they perform
    - find or implement more algorithms: e.g. some interior point method
      algorithms would be cool
  * make the solver as a separate thread so that the user can continue working
    while the solver is solving the program
    - start a status dialog after a few hunderd msec if the solver is still
      counting
    - add a callback function into the solve fn for interacting with the
      status dialog
  * computing performance improvements:
    - make the getting of LP coefficents faster

Misc:
  * add example programs into samples/solver
    - infeasible
    - unbounded
    - ILP
  * update the user documentation
  * fix XL import and export of the solver parameters
  * lpkit: remove/#if0 obsolete code


Regarding NLP:
==============

* implement support for QP (quadratic programming)
  - support for fetching the QP obj. fn
  - QP solver API
  - QP solver algorithms
  - QP results reporting
  - QP extensions for the MPS plugin
* implement support for general NLP
