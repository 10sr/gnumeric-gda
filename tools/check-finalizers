#!/usr/bin/perl -w
#
#  Gnumeric
#
#  Copyright (C) 2003 Morten Welinder.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the
#  License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this library; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Author: Morten Welinder <terra@gnome.org>

use strict;

my $exitcode = 0;
my $verbose = 0;
my $strict = 0;

warn "$0: should be run from top-level directory.\n"
    unless -r "configure.in" && -r 'ChangeLog';

my %base_exceptions =
    ();

my %exceptions =
    ();

{
    local (*FIND);
    open (*FIND, "find . '(' -type f -name '*.c' -print ')' -o '(' -type d '(' -name CVS -o -name intl -o -name macros ')' -prune ')' |")
	or die "$0: cannot execute find: $!\n";
  FILE:
    foreach my $filename (<FIND>) {
	chomp $filename;
	$filename =~ s|^\./||;

	next if $exceptions{$filename};
	my $basename = $filename;
	$basename =~ s|^.*/||;
	next if $base_exceptions{$basename};

	local (*FIL);
	if (open (*FIL, "< $filename")) {
	    # print "Checking $filename...\n";
	    my $lineno = 0;
	    my $state = 1;
	    my $funcname = undef;
	  LINE:
	    while (<FIL>) {
		$lineno++;

		if ($state == 1 && /^([a-zA-Z_]+[a-zA-Z_0-9]*_finalize)\s*\(/) {
		    $funcname = $1;
		    next if $funcname =~ /base_class_finalize$/;
		    $state = 2;
		    next;
		}

		next if $state == 1;

		if (/^\}/) {
		    if ($state != 3) {
			print "$filename:$lineno: apparently missing chain in $funcname.\n";
		    }
		    $state = 1;
		    next;
		}

		if (/->\s*finalize\s*\)?\s*\(/ ||
		    /GNOME_CALL_PARENT.*,\s*finalize\s*,/ ||
		    (/gnm_command_finalize/ && $funcname =~ /^cmd_/) ||
		    /g_object_dtor\s*\)?\s*\(/) {
		    $state = 3;
		    next;
		}
	    }
	    close (*FIL);
	} else {
	    print STDERR "$0: Cannot read `$filename': $!\b";
	    $exitcode = 1;
	}
    }
    close (*FIND);
}

exit $exitcode;
