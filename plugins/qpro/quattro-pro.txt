Quattro Pro File Format

 The Quattro Pro® file format documentation covers the
 following major areas:

    * File Structure and Records: Provides the definition
      of a record, the Quattro Pro for Windows file
      organization, and a synopsis of spreadsheet records
      grouped by use.

    * Records by Type: Lists type definitions used by
      records.

    * General Declarations and Type Definitions: Gives a
      record-by-record explanation of each record used by
      the spreadsheet portion of a Quattro Pro for Windows
      file.

    * Formula Syntax and Opcodes: Describes the syntax used
      by Quattro Pro for Windows formulas.

 Manual Conventions

 As you read this manual, you should understand the
 following conventions to help you locate and interpret the
 information you need.

 Decimal and Hexadecimal Values

 Computers perform operations and handle data in binary
 form, which can be readily represented with hexadecimal
 numbers. Conversion between decimal and hexadecimal values
 is not obvious. In this document, values will generally be
 shown as decimal numbers, frequently followed by the
 hexadecimal equivalent in parentheses. The hexadecimal
 value will be represented as number that begins with "0x"
 followed by the actual value, such as (0xFF). In most
 cases values are unsigned.

 Size Definitions

 Sizes are referred to as bytes, short integers (sometimes
 abbreviated as short), or long integers (sometimes
 abbreviated as long). Depending on the environment and
 operating system, these terms can mean different things.
 Fields are depicted with the field name enclosed in
 brackets. The brackets indicate the size of the field. Use
 the table below to match the bracket types with the size
 and terms they represent.

  Terms Names Brackets Size

  Byte character (char), byte < > 8
  bits

  Short short integer, word [ ] 16
  bits

  Long long integer, double word { }
  32 bits

  Quadword || || 64 bits

 The byte sequence of all multi-byte data types that are
 larger than a byte follows the Intel* convention of
 placing the least-significant byte first.

 Fields with Bit Flags

 Some fields have bit flags. Individual bits are specified
 by a bit number. The range of bits for a byte value is
 from 0 to 7, with bit 0 the rightmost or least significant
 bit, and bit 7 the leftmost or most significant bit.

 Fields

 The brackets shown in the table under Size Definitions
 above are used to describe the size of the individual
 fields within a record. If a field is variable in length,
 it is represented with " x ?" following the field. For
 Example:

 If a field contains 5 bytes, it is represented as:

 <byte field description> x 5

 If a field contains an indefinite number of short values,
 it is represented as:

 [short field description] x ?

 Indentation

 Indentation is used in this document to distinguish levels
 of detail and to signal something unique about the
 information. Most flag fields require a definition of the
 meaning of each bit used in the flag. The definition will
 be indented under the flag field to give a visual
 indication that it contains additional information about
 the previous field.

 File Structure and Records

 Quattro Pro 6.0 files add support for the OLE Compound
 File format specification. This Compound document
 information wraps around a Quattro Pro file. The OLE
 Compound file format is the native file format for OLE 2
 servers and makes it possible for full implementation of
 Windows 95 Shell integration features. A Compound file is
 a file system within a file. This support was added to
 allow users, using OLE 2 server applications, to browse,
 modify, and share embedded Quattro Pro 6.0 documents
 without starting Quattro Pro. In addition, the Windows 95
 Shell integration gives users the ability to move
 documents to other machines without losing their links.

 Embedded inside to the OLE Compound document is the
 standard Quattro Pro file format. The file format for
 Quattro Pro for Windows consists of a set of
 variable-length binary records, numbered (with some gaps)
 from 0 to 802. These records comprise most spreadsheet
 information in the file. There is another section of
 object information which is beyond the scope of this
 manual. (Objects are items such as graphs, dialog boxes,
 and buttons which a Quattro Pro for Windows user may have
 used.)

 Record Header

 Each record consists of a 4-byte header followed by the
 record body.

 [record type] record type
 [body length] length of record body
 ... header is followed by a variable-length record body

 Note: The value given in the [body length] field includes
 the record body only. It does not include the [record
 type] and [body length] fields.

 Groups of Records

 Quattro Pro for Windows spreadsheets appear on screen in
 the form of a notebook that has up to 256 pages. Each page
 has the traditional rows and columns of a two-dimensional
 spreadsheet: 256 columns by 8192 rows. Internally, the
 numbering of rows, columns, and pages start from 0 (which
 makes the internal row number one less than the on screen
 number). The hierarchy of notebook, to page, to cell
 location is reflected in the Quattro Pro for Windows file
 organization, as shown by this overview:

 File Begin
   Password record
   Records shared by all pages
   ...
   Graph records
   Object-oriented information

   Page Begin for page 1
     records containing information for page 1 only
     ...
     cell records
   Page End
   Page Begin for page 2
     records containing information for page 2 only
     ...
     cell records
   Page End
   ...
   View Begin for view 1
     ...
   View End
   View Begin for view 2
     ...
   View End
   ...
 File End

 In Quattro Pro for Windows, a view is an instance of a
 notebook displayed on screen in its own window. A pane is
 the display area of that notebook window. When the pane
 has been split into two horizontal or vertical areas, they
 may be scrolled synchronously or asynchronously.

 Records Shared by All Pages

 The following table lists the records shared by all pages;
 that is, global notebook information. Record order is the
 same as it appears in the file. The End of File EOF record
 is the last record in the file, even though it applies to
 all pages.

  Record Name Number Length

  BOF Beginning of File 0 2

  Version 201 2

  Password Level 76 2

  Password (if present, all data after
  this record is encrypted) 75 2

  Dimension 6 8

  Macro Library 153 1

  Recalculation Mode 2 1

  Recalculation Order 3 1

  Recalculation Iteration Count 47 1

  Compile Formulas 306 1

  Audit Formulas 307 1

  Font 207 36

  Color Table 232 64

  User-Defined Numeric Format 230
  Varies

  Style 208 Varies

  Cell Attribute 206 12

  DLL 228 Varies

  DLL Function (follows DLL record
  immediately) 229 Varies

  External Link 151 Varies

  External Name 152 Varies

  Name 11 Varies

  Page Group On 226 1

  Page Group 227 Varies

  Graph list is here. See Named Graph
  List Records later in this section.

  Print information is here. See the
  Print Information table below.

  Fill 28 10

  Table 24 32

  Query 25 32

  Compatible Slide Show 269 10

  Optimizer (followed immediately by
  Optimizer Constraint record) 259 84

  Optimizer Constraint 260 84

  Solve For 183 38

  Sort Block 27 14

  Sort First Key 29 12

  Sort Second Key 35 12

  Sort Third Key 159 12

  Sort Fourth Key 160 12

  Sort Fifth Key 161 12

  Frequency (Distribution) 32 20

  Parse 102 20

  Regression 103 32

  Matrix 105 50

  Notebook Object Show 310 2

  EOF End of File 1 0

 Print Information

 There are three sets of print information. Each set begins
 with a different record type:

    * Default Print Set for the Notebook (265)

    * Default Print Set for Printing Graphics (266)

    * Named Print Set (237)

 Each type is followed by records from Print Block (26) to
 Print End (251). Print information is shared by all pages.

  Record Name Number Length

  Print Begin/Records 265 1

  Print Begin/Graphs 266 1

  Print Begin/Named Print Set 237
  Varies

  Print Area 273 1

  Print Block 26 10

  Print Footer 37 Varies

  Print Header 38 Varies

  Print Setup 39 Varies

  Print Margins 40 12

  Print Page Break 48 1

  Print Formulas 238 1

  Print Headings 257 1

  Print Guidelines 258 1

  Print Block Delimiter 239 4

  Print Page Delimiter 240 4

  Print Copies 241 2

  Print Pages 242 6

  Print Density 243 1

  Print To Fit 244 1

  Print Scaling 245 2

  Print Paper Type 246 2

  Print Orientation 247 1

  Print Left Border 248 10

  Print Top Border 249 10

  Print Center Blocks 250 1

  Print Footer Font 272 36

  Print Header Font 252 36

  Print Draft Mode Margins (used for
  compatibility with Quattro Pro for
  DOS menus) 268 12

  Print End 251 0

 Individual Page Records

 Records shown in the following table are for an individual
 page but are shared by multiple views of the same page.
 All such records are bounded by two special records, Begin
 Page and End Page. An empty page does not require Begin
 Page and End Page records.

  Record Name Number Length

  BOP Beginning of Page 202 1

  Page Name 204 Varies

  Protection 36 1

  Page Attribute 209 38

  Page Object Protection 311 1

  Page Tab Color 308 4

  Page Zoom Factor 309 4

  Pane settings are here. See the Pane
  Settings table below.

  Cell information is here. See the
  Cell Information table below.

  EOP End of Page 203 1

 Pane Settings

 There are at most two panes per page. Each pane has its
 own settings: a record type for a record pertaining to
 Pane 1 and another record type pertaining to Pane 2. In
 the following table the record number for Pane 1 appears
 first, followed by the record number for Pane 2. All
 records for Pane 1 always appear before any Pane 2
 records; they are never mixed.

  Record Name Number Length

  Default Pane Style 224, 225 2

  Default Row Height 210, 211 2

  Default Column Width 212, 213 2

  Row Height 214, 215 4

  Row Height Range 261, 262 6

  Column Width 216, 217 4

  Max Font 218, 219 3

  Max Font Range 263, 264 5

  Hidden Rows 220, 221 1024

  Hidden Columns 222, 223 32

 Cell Information

 The following table lists the information pertaining to
 columns, ranges, and individual cells.

  Record Name Number Length

  Column Size 150 Varies

  Default Column Attribute 231 4

  Blank Cell 12 6

  Integer Cell 13 8

  Floating-Point Cell 14 14

  Label Cell 15 Varies

  Formula Cell 16 Varies

  Formula String Value 51 Varies

 Individual Views Records

 Records for individual views are bracketed by the Begin
 View and End View records. View records appear after Page
 records. The following table lists View records in the
 order in which they appear in a file.

  Record Name Number Length

  Begin View 401 0

  Window Size 403 6

  Window Location 404 4

  Display Settings 412 8

  Zoom Factor 414 2

  Pane Information (a view can be
  divided into panes) 407, 408 21

  Split 405 6

  Synchronize 406 2

  Visible Page (each pane of each view
  may be showing different pages) 409,
  410 1

  Current Pane View 411 1

  End View 402 0

 Named Graph List Records

 The graph list begins with the Graph Engine Version
 record, which indicates what version of graphing
 technology is in use. The Graph Engine Version record is
 always followed by records defining the current graph,
 followed by records defining the other named graphs in the
 notebook.

  Record Name Number Length

  Graph Engine Version 612 4

  Current graph is here (see
  Individual Graph Records below),
  which uses the same records as a
  named graph but has the name
  "<Active Graph>"

  Other graphs are here (see
  Individual Graph Records below).

 Individual Graph Records

 The records for the graph immediately following the Graph
 Engine Version record always define the current graph,
 which is named "<Active Graph>" in the .WB2 file. It is
 stored identically to other named graphs. Begin Graph and
 End Graph records bracket the definition of each graph.
 The following table lists the records in the order in
 which they appear in the file.

  Record Name Number Length

  Begin Graph 601 Varies

  Begin Object 801 0

  Begin Graph Record 700 0

  Begin Chart Engine Record 713 0

  Begin Chart Save 717 0

  End Chart Save 718 0

  Graph Extensions (multiple
  instances) 715 Varies

  End Chart Engine Record 714 0

  Begin Chart Series 701 0

  X Axis Label Series 703 10

  Z Axis Label Series 704 10

  Legend Series 705 10

  Display Order 731 2

  Number of Series 706 2

  Begin Data Series 707 0

  Series Data 710 10

  Series Label 711 10

  Series Legend 712 Varies

  Series Extensions 732 Varies

  End Data Series 708 0

  End Chart Series 702 0

  End Graph Record 799 0

  End Object 802 0

  Graph Icon Coordinates 605 4

  End Graph 602 0

 Slide Show Records

 Records for slide shows appear immediately following
 records for graphs. The following table shows the records
 for slide shows.

  Record Name Number Length

  Begin Slide Show 606 Varies

  Slide Show icon Coordinates 608 4

  Slide Type 618 2

  Master Slide Name 620 Varies

  Information for individual slides is
  here (see table below)

  End Slide Show 607 0

 Individual Slides Records

 Individual slides consist of records specifying the name,
 transition, and transition speed and effects of the slide.
 The following table shows the records for individual
 slides.

  Record Name Number Length

  Slide Name 609 Varies

  Slide Comment 619 Varies

  Slide Time 610 2

  Slide Speed 613 2

  Slide Level 615 2

  New Slide Special Effects 614 2

  Slide Special Effects 611 2

 Structure Definitions

 Quattro Pro for Windows uses the following structure
 definitions. All strings are zero-terminated.

 Record Header

 The 4-byte record header appears before every spreadsheet
 record. It provides the number signifying the record type,
 and the length of the record body in bytes.

 [record type] record type
 [body length] length of record body
 ... header is followed by a variable-length record body

 Cell Locations

 The full description of a cell location is defined in the
 following structure. The last three bytes describe a cell
 location within the notebook specified by the notebook
 index.

 [flags]
   bits 0-9: notebook index
   bit 10: absolute delete
   bit 11: deleted
   bits 12-15: type (always 0 for a cell location)
 <cell column> column of notebook cell
 <cell page> page of notebook cell
 [cell row] row of notebook cell

 Block References

 A one-, two-, or three-dimensional block of cells is
 defined by specifying the column, page, and row of the
 cells on diagonally opposite corners of the block. For
 convenience, these corners are referred to as the top-left
 and bottom-right cells of the block. A fully qualified
 block or range is defined by the following structure.

 [flags]
   bits 0-9: notebook index
   bit 10: absolute delete
   bit 11: deleted
   bits 12-15: type (always 1 for a block reference)
 <top-left column> top-left corner of block
 <top-left page>
 <top-left row>
 <bottom-right column> bottom-right corner of block
 <bottom-right page>
 <bottom-right row>

 Name Reference

 Describes a fully qualified name reference (a named cell
 location):

 [flags]
   bits 0-9: notebook index
   bit 10: absolute delete
   bit 11: deleted
   bits 12-15: type (always 2 for a name reference)
 [name index] index into name table

 Collection Reference

 Describes a collection of references:

 [flags]
   bits 0-9: sizeof(references) + 2
   bit 10: absolute delete (always 0)
   bit 11: deleted (always 0)
   bits 12-15: type (always 3)
 <references> x ? collection = cell location, block, name

 Collection Pointer Reference

 The first structure below points to a collection of blocks
 or ranges. The second structure is a union. A reference
 used in the sample C language code given with the
 spreadsheet records can be one of cell location, block,
 name reference, or collection pointer. When a record
 contains collection pointer reference, a Collection record
 (233) immediately follows.

 [flags]
   bits 0-9: unused (always 0)
   bit 10: absolute delete (always 0)
   bit 11: deleted (always 0)
   bits 12-15: type (always 4 for a collection pointer)
 <unused> x 6 unused

 A reference may be a cell location, a block, a named cell,
 or a collection pointer. In C it is defined as a union of
 these four reference structures. The first field of each
 of these reference structures is flags and bits 12-15 of
 flags determines which type of reference is present.

 typedef union {
   CELLLOC  cell;
   BLOCK    block;
   NAMEREF  name;
   COLLPTR  collptr;
 } REFERENCE;

 [Image] [Image]




  Copyright © 1997 Corel Corporation.
  contact info

  To contact Customer Service at one of our worldwide
  locations, click here

  Last Updated: September 9, 1996
