2000-03-01  Jon K Hellan  <hellan@acm.org>

	* python.c (cell_ref_to_python, range_to_python,
	cell_ref_from_python): Simplify error handling.
	(boolean_to_python): Simplify
	(row_to_python): New function. Converts an array row to
	Python.
	(array_to_python): New function. Converts an array to Python.
	(value_to_python): Handle array.
	(range_check): Factored out of value_from_python.
	(range_from_python): Restructure to use value_new_cellrange
	(array_check): New function. Check if object is array. 
	(value_from_python): Restructure to use the value_new_xxx
	constructors.
	(apply): Release values when no longer needed.

2000-02-29  Jon K Hellan  <hellan@acm.org>

	* python.c: Great renaming:
	convert_py_exception_to_string -> exception_to_string
	convert_cell_ref_to_python     -> cell_ref_to_python
	convert_range_to_python        -> range_to_python
	convert_boolean_to_python      -> boolean_to_python
	convert_value_to_python        -> value_to_python
	convert_cell_ref_from_python   -> cell_ref_from_python
	convert_range_from_python      -> range_from_python
	convert_python_to_value        -> value_from_python
	gnumeric_apply                 -> apply
	gnumeric_register_function     -> register_function

2000-02-28  Jon K Hellan  <hellan@acm.org>

	* python.c: GnumericError: Define
	(convert_py_exception_to_string): Do not decorate the value string
	of GnumericError - it represents a VALUE_ERROR we have been returned.
	(gnumeric_apply): Raise GnumericError if function_call_with_values
	returned error.
	(initgnumeric): Add GnumericError exception class.

2000-02-26  Jon K Hellan  <hellan@acm.org>

	* python.c (convert_py_exception_to_string): Move to top.
	(convert_cell_ref_to_python): New function. Convert cell reference
	to Python.
	(convert_range_to_python): New function. Convert range to Python
	(convert_value_to_python): Handle cell range, empty value, boolean
	(convert_range_from_python): New function. Convert Python range to
	gnumeric value.
	(convert_cell_ref_from_python):  New function. Convert Python cell ref
	to gnumeric ditto.
	(convert_python_to_value): Simplify string handling. Handle cell
	range, empty. Return exceptions as VALUE_ERROR.
	(init_plugin): Add gnumeric python directory to
	sys.path, so that we can install modules there.

	* gnumeric_startup.py: Import gnumeric_defs
	(help_py_mid, help_py_abs): Fix typo.
	(run_user_init_file): Run user rc file in current global
	namespace. 

	* gnumeric_defs.py: New file.
	(CellRef): Class for cell references
	(CellRange): Class for cell ranges

2000-01-31  Jody Goldberg <jgoldberg@home.com>

	* python.c (gnumeric_apply) : Make the const warning quiet.

2000-01-14  Jon K Hellan  <hellan@acm.org>

	* python.c (convert_py_exception_to_string): New function.
	(marshal_func): Convert exception info to string which is
	displayed in sheet. Did not remove traceback to stderr.
	(gnumeric_apply): New function. Invoke a gnumeric function from
	python.
	(__register_function): Rename to gnumeric_register_function. No
	need for funny "__" in a static function.
	(gnumeric_register_function): Fix typo. Category should be
	"Python", not "Perl".
	(gnumeric_funcs): Register gnumeric_apply. Use METH_VARARGS
	constant instead of 1.
	(init_plugin): Convert exception info to string which is displayed
	in dialog box. Did not remove traceback to stderr.

	* gnumeric_startup.py (gnumeric_mid): Register as "py_mid" instead
	of "mid" - no longer overrides built-in version.
	(py_abs): New function. Example of invoking a gnumeric function
	from Python.
	(run_user_init_file): New function. Run user init file
	~/.gnumeric/rc.py if present.

2000-01-03  Jon K Hellan  <hellan@acm.org>

        * plugins/python/python.c (initgnumeric): No longer display
        Python initialization message.

