-*-outline-*-

Gnumeric Spread Sheet task list

* Workbook
   
   Have a new "manager" file that will take over the details of open
   workbooks and active servers, instead of the current approach we
   use to have this management in the workbook.c file

   JEG : Maybe move this to application.[ch] ??

   The bold and italic buttons need to be updated after a load to
   reflect the cell with the cursor.

* Component

   Make sheet_selection_changed_hook execute a list of hooks 
   Remove the hard-coded workbook hooks from the sheet.
   Initialize the hooks on the workbook_new routine.

   The model is somewhat broken.  sheet_new creates a sheet_view by
   default. 

   I think we need something like: workbook_new and workbook_view_new
   to split this sort of thing.

* Cell editing

   * Support for entering multi-line cells, and <Alt-Enter> adding an
     embedded newline.

   * Colouring a parsed formula for editing.

   * The mouse can select a range as the current argument while editing a
     formula without changing to a different cell.

   * We do not support selecting a range on a different sheet.

* Expressions

    * Implicit iteration.  For an array expression that returns scalar results
      which takes a range as a scalar argument, apply the expression to each element
      of the input range.

* Implement Even More Functions

    * AREAS and GETPIVOTDATA
    * AMORDEGRC, AMORLINC, COUPDAYBS, COUPDAYS, COUPDAYSNC, COUPNCD,
      COUPNUM, COUPPCD, CUMIPMT, CUMPRINC, MDURATION, MIRR, ODDFPRICE,
      ODDFYIELD, ODDLPRICE, ODDLYIELD, PRICE, VDB, YIELD, YIELDDISC,
      and YIELDMAT.

* Fix the Following Functions

    * GROWTH, INDEX, LINEST, LOGEST, MATCH, TREND, and VLOOKUP

* Printing
  * Preview
    * Stroke support for zoom etc.
  * Print setup: 
    * Options buttons
    * Improve layout 
    * Provide GUI for margin editing.
    * Provide preview of the headers/footers
    * Make sure scaling works.
  * Add the missing options to the Print Dialog
  * Display printing status (pages to go).
  * Add column/row title printing
  * Add color printing support.
  * Borders & patterns.

* Font dialog

  * Get the list of *valid* fonts from GnomePrint
  * Create a simplistic dialog (to map to font-bold yes/no).

* Cell dimension computation is broken on font change for multi-lines.
    - Alignment 'Center' is broken when used with spanning cells.

* Number formatting

   The formatting code should take the current GtkFont for the cell
   being formatted as well as the width allowed and take this into
   account to render the number as well as possible given the space so
   that for small regions, numbers in scientific notation are displayed.

   - '@' does not work
   - '*' does not work
   - 'General' is rather stupid.  It needs to take the size of the cell into account.

    FIXME : The formating is still incomplete.
	  - It does not support seconds fractions.
	  - It incorrectly accepts mmm:ss as some sort of minute spec.
	  - Add/remove decimal buttons on the toolbar are screwed for
	    items with different formats formegatives.
	  - There is too much replicated code for generating formats
	    and recognizing them in the format dialog.

    TODO :
	  - Too much parsing is taking place when formating.  We should
	    have set all that up beforehand when the format was parsed.
	    A methodology similar to that used by the regexp compiler should
	    be used.

* Sheet

   Should be possible to bind a name by typing the name on the
   region box and applying it to the selection
   
   When inserting columns / rows the _sheet_ names should resize to take
   account of this.

** Column sizes

   Columns should be smaller by default, and have an
   "auto-grow-up-to-this-point" feature.  Beyond that size, it would
   truncate as it does now.

** Display

   Provide a CanvasAA version of Gnumeric.  

   Nice side effect is that the selection would just be a transparent
   color layered on top of whatever is selected.  So we can do the
   Excel2000 trick of using a light blue to show the selection, rather
   than black.

   This has the effect of letting users "see" the color they are
   filling/coloring things with when the selection is turned on

** Cell data entry:
   double click on cell allows editing as in main editing box.

   double click on the magic little copy box fills the current
   column to the depth of the column to the left ??

** Headers for Columns and Rows

   The captions should be customizable, ie instead of "A1", it should
   be possible to display "Sales".  We can use this with Michael's
   name support. 

   Instead this should be done with split-pane support in tandem with
   disabling the standard caption rendering. This would give a far more
   flexible approach : Michael.

** Captions (ItemBar)

   It should be possible to set the dimensions of the cols, rows to
   contain information as "min_points", "max_points".  

   Interesting side effect: min_points == max_points means "fixed". 

** Queueing redraws as we are doing it now is broken.

   Currently I queue the entire changed region for redraw, I should
   only queue the difference and possibly the borders (after a cell 
   border has changed).

   This causes the slowdown when selecting large sheets.

* Auditing
   Write the sheet auditing code.

* Searching

   Searching text on the spreadsheet.

* EDITING

** Object Clipboard
   If sheet->mode is OBJECT_SELECTED cut/copy/paste should operate on
   the object.

   Object properties.

** Paste special 

  needs some little changes:
  - When formulas are pasted with an operation,
    the new ExprTree should be created with the operation.

** Style

  Protection:
    Bloqued/Hidden

* File Load/Save

  Support for popular formats.  

    I have the specs for the XS3 format.  SC should be
    trivial to support as well (from the guile sources)

  Add "hints" to the file save routine based on the registered
  formats.

* Display Engine

* Unicode support throughout

* Workbooks:

** Notebook:

   Clicking on it chooses it
   Double clicking changes the name
   Right clicking gets:
     insert

 - Decrease flicker when paging between sheets.
 - Enable capability to select multiple sheets.

 - Allow range selection to work when switching between sheets.
    ie Use the arrows to select a different cell while entering a
       formula.  Then use the ctrl-Pg{Up,Down} to select a cell on
       a different sheet.

* Sheet Objects

  * Load / save, print of all objects + Bonobo objects.

* Office compatibility

Write an XML plugin to output 'Publish as Web' style XML for
Office 2000 and 'explorer' compatibility.

* Internals

  * Hack R[-1]C[3] type references into the parser.

* Internals

   Our current setup is *slow*.  In many areas, but still *slow*.

   When filling large regions (ie, select, enter data, control-enter),
   we are taking ages.  In those cases, we could probably:

      1. Preallocate all cells.
      2. Pre-parse formulas
      3. Pre-render contents.

   struct _Cell should be optimized with a typed union; merge
   text, entered_text. Think about width, height, render_color
   merge flags + generation + move comments to a parallel hash.

* Rendering

  * Sort out the cell span stuff
    * Have a 'merged cell' structure that can be overridden
    * have a 'user-set' feature for 'merge cells'

* Calculation
  * Rework dependencies to only supply one level of indirection.
  * Rework 'Name' dependencies so we can re-express names.
  * Think about allowing a formula to specify that it does not depend on the
    contents of a reference, only the adress (ie the AREAS function)
  * Dependancies for - CELL functions.
		     - Sheet objects
  * Teach dependencies about implicit intersections
    ( big speedup (assesed2.xls))

* Drawing
  * Rework borders to agregate the lines and draw them after backgrounds

* Excel Import
  * Localise sheet/workbook Name import,
  * Import names even if they arn't referenced.

* Html export
  * Export style information for blank cells.
